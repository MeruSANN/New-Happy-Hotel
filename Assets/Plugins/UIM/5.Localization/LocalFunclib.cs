using System.Collections;using System.Collections.Generic;using I2.Loc;using TMPro;using UnityEngine;public static class LocalFunclib{    public static string GetStr(string key)    {        return GetStr("", key);    }    public static string GetStr(string path, string key)    {        return LocalizationManager.GetTranslation(path + key);    }                public static void SetLocalizedString(I2.Loc.Localize I2localizeStringEvent, string key,bool isTextUseKey=true)    {        // 检查 localizeStringEvent 是否有效        if (I2localizeStringEvent == null)        {            Debug.LogError("LocalizeStringEvent is not assigned.");            OnUseKey();        }        // 检查条目是否存在        TermData term = I2.Loc.LocalizationManager.GetTermData(key);                // 如果找不到对应的本地化条目，返回空字符串        if (term==null)        {            Debug.LogError($"No localization Term for: {key}");            OnUseKey();        }                string translation;        bool termExists = I2.Loc.LocalizationManager.TryGetTranslation(key, out translation);        if (!termExists || translation==null)        {            // There is no term named termName or there is no translation to the current language            Debug.LogError($"No Translation for Term: {key}");            OnUseKey();        }                I2localizeStringEvent.SetTerm(key);        void OnUseKey()        {            if (!isTextUseKey) return;            I2localizeStringEvent.enabled=false;            if (I2localizeStringEvent.GetComponent<TMP_Text>())            {                I2localizeStringEvent.GetComponent<TMP_Text>().text = key;            }        }    }}