using Sirenix.OdinInspector;using System.Collections;using System.Collections.Generic;using Unity.VisualScripting;using UnityEngine;using UnityEngine.SceneManagement;using static UnityEngine.Rendering.DebugUI;public class UIM_TransCurtatin : Singleton<UIM_TransCurtatin>{    [SerializeField]    [LabelText("出场预留时间")]    private float startTime = 3f;    [SerializeField]    [LabelText("转场预留时间")]    private float endTime= 1f;    private GameObject _panel;    private Animator _anima;        public void Start()    {        _panel = transform.GetChild(0).gameObject;        _panel.SetActive(true);        _anima = _panel.GetComponent<Animator>();        StartCoroutine(SetAnima(true, startTime));        //anima.SetBool("ISSWITCH", true);    }    //转场    public  void OnTransSence(string sceneName)    {        if (Application.CanStreamedLevelBeLoaded(sceneName))        {            StartCoroutine(SetAnima(false));            //anima.SetBool("ISSWITCH", false);            StartCoroutine(WaitTrans(sceneName));        }        else        {            Debug.LogError($"无法转场至：{sceneName}");        }    }    private IEnumerator WaitTrans(string name)    {        yield return new WaitForSeconds(endTime);        SceneManager.LoadScene(name);    }    public IEnumerator SetAnima(bool state,float delay=0f)    {        yield return new WaitForSeconds(delay);        _anima.SetBool("ISSWITCH", state);    }}