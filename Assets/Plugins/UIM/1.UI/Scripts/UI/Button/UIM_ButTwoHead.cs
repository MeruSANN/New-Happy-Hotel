using Sirenix.OdinInspector;using UnityEngine;using UnityEngine.UI;using TMPro;using UIM;using UIM.Input;[AddComponentMenu("UIMaster/Button/ButTwoHead")][DisallowMultipleComponent]public class UIM_ButTwoHead : MonoBehaviour{    [LabelText("非鼠标隐藏")]    public bool IsSwitchWithController;    private Button middleBut;    public Button leftBut,rightBut;    public TMP_Dropdown targetDrop;        public I2.Loc.LocalizeDropdown targetDropI2Loc;                private void OnEnable()    {        //初始化的时候设置一次        SetDisplay();        UIM_InputSystem.Instance?.OnSwitchControlDevice.AddListener(delegate { SetDisplay(); });    }    private void OnDisable()    {        UIM_InputSystem.Instance?.OnSwitchControlDevice.RemoveListener(delegate { SetDisplay(); });    }    private void SetDisplay()    {        //如果关闭则无法检测        if (IsSwitchWithController==false)return;                var drive = UIM_InputSystem.Instance.currentControlDevice;        if (drive==ControlDevice.Mouse)        {            leftBut.gameObject.SetActive(true);               rightBut.gameObject.SetActive(true);           }        else        {            leftBut.gameObject.SetActive(false);               rightBut.gameObject.SetActive(false);           }            }        private void Awake()    {        ChangeValue(0);        leftBut.onClick.AddListener(delegate { ChangeValue(-1,true); });        rightBut.onClick.AddListener(delegate { ChangeValue(1,true); });        middleBut = GetComponent<Button>();        middleBut.onClick.AddListener(delegate { ChangeValue(1, true); });    }/// <summary>/// 值被改变时的方法/// </summary>/// <param name="i"></param>/// <param name="isLoop"></param>    public void ChangeValue(int i,bool isLoop=false)    {               int num = targetDrop.value += i;        //当模式开了循环，则从最大值调到1        if (isLoop)        {            if (num >= targetDrop.options.Count)            {                num = 0;            }            else if (num<0)            {                num = targetDrop.options.Count - 1;            }        }        targetDrop.value = num;        //刷新文字        targetDrop.GetComponent<TMP_Text>().text = targetDrop.options[targetDrop.value].text;        FreshButton();    }    public void FreshButton()    {                //目前不做开关隐藏                /*Debug.Log("FreshButton");                leftBut.interactable = true;        rightBut.interactable = true;        if (targetDrop.value == 0)        {            leftBut.interactable = false;        }        if (targetDrop.value == targetDrop.options.Count - 1)        {            rightBut.interactable = false;        }*/        UIM_UIManager.Instance.RefreshLayoutsRecursively();    }}