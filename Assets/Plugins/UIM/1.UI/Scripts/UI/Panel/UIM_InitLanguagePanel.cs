using System.Collections;using System.Collections.Generic;using TMPro;using UnityEngine;/*using UnityEngine.Localization;using UnityEngine.Localization.Settings;*/using UnityEngine.UI;using Sirenix.OdinInspector;using System;public class UIM_InitLanguagePanel : UIM_UnvisersalListPanel{    [InlineProperty]    [SerializeReference]    public SO_Language langu;    private void Awake()    {        OnInitElements();    }    public override void OnInitElements()    {        base.OnInitElements();        //读取设置中的语种，然后生成按钮        langu =  UIM_SettingManager.GetOptionFuction<SO_Language>() as SO_Language ;        if (langu == null) return;               for (int i = 0; i < langu.languagesCodes.Count; i++)        {            GameObject obj= OnAddElements() ;            obj.transform.GetChild(0).GetComponent<TMP_Text>().text = langu.languagesCodes[i];            int currentIndex = i;            //Debug.Log($"{obj.name} 赋予了{i}按钮，语言将转换为{langu.locales[i].LocaleName}");            obj.GetComponent<Button>().onClick.AddListener(delegate { OnSetLanguage(currentIndex); });        }    }    public void OnSetLanguage(int i)    {        //Debug.Log($"按下了{i}按钮，语言将转换为{langu.locales[i].LocaleName}");        //同步到data数据中        langu.optionState.value = i;        langu.OnChangeOption();        UIM_SettingManager.Instance.curOptionStateSO.SaveData();    }}