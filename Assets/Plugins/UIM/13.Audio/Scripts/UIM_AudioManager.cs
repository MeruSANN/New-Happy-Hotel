using UnityEngine.Audio;using UnityEngine;using Sirenix.OdinInspector;using UnityEngine.Serialization;namespace UIM.Audio{[AddComponentMenu("UIM/Audio/AudioManager")][DisallowMultipleComponent]//当应用于类时，sealed 阻止其他类继承该类：public sealed class UIM_AudioManager : UIM_UniversalManager<UIM_AudioManager>{    [SerializeField] public AudioMixer _mixer;    [SerializeField]     private AudioSource _sfxSource;    [SerializeField]     private AudioSource _bgmSource;    [FormerlySerializedAs("_audioData")]    [LabelText("音频数据")]    [InlineEditor]    [SerializeField]     public SO_AudioData AudioData;       private AudioSystem _audioSystem;    public AudioSystem AudioSystem => _audioSystem;    private void OnEnable()    {        if (Instance != null && Instance != this)        {            Destroy(gameObject);            return;        }        DontDestroyOnLoad(gameObject);        // 初始化核心系统        _audioSystem = new AudioSystem(_sfxSource, _bgmSource, AudioData);        // 注入到全局工具类        AudioFunclib.SetAudioSystem(AudioSystem);    }    private void Update()    {        // 示例：窗口焦点音量控制        if (UIM_SettingManager.GetValueByOption<SO_SwitchOutMute>() == 0)            AudioListener.volume = Application.isFocused ? 1 : 0;    }}}