using Sirenix.OdinInspector;using System.Collections.Generic;using UnityEngine;using UnityEngine.SceneManagement;[AddComponentMenu("UIMaster/SaveFile/SaveFileManger")][DisallowMultipleComponent]public class UIM_SaveFileManger : UIM_UniversalManager<UIM_SaveFileManger>, IManager{        //存档系统目前使用的是类似空洞骑士的选择存档=>进入对应存档的模式，如果要改为存档是tog，切换，目前种田项目是最新的代码    public int fileCount;    [LabelText("存储游戏数据")]    public List<SaveFileSO> saveFileDatas;    [LabelText("当前使用数据")]    public SaveFileSO currentSaveFileData;    private void Awake()    {    }    public void Start()    {                //初始化存档        for (int i = 0; i < fileCount; i++)        {            saveFileDatas.Add(null);            int num = i;            OnLoadSaveFileDatas(num);        }              }    public override void InitManager()    {       }    /// <summary>    /// 创建数据    /// </summary>    /// <param name="i"></param>    public void CreateData(int i)    {        saveFileDatas[i] = ScriptableObject.CreateInstance<SaveFileSO>();        UIM_SaveLoad.SaveData(saveFileDatas[i], "SaveFileData", $"/SaveFile_{i}");    }    /// <summary>    /// 删除数据    /// </summary>    /// <param name="i"></param>    public void DeleteData(int i)    {        saveFileDatas[i] = null;        UIM_SaveLoad.DeleteData("SaveFileData", $"/SaveFile_{i}");    }    /// <summary>    /// 从本地读取so文件数据    /// </summary>    public void OnLoadSaveFileDatas(int i)    {        var b = UIM_SaveLoad.DoesDataExist("SaveFileData", $"/SaveFile_{i}");        if (b)        {            saveFileDatas[i] = new SaveFileSO();            UIM_SaveLoad.LoadData(saveFileDatas[i], "SaveFileData", $"/SaveFile_{i}");        }    }}